require_relative "../../lib/cms_validators"
require_relative "../../lib/encounter_validator"

module UploadsHelper


    def node_type(type)
      return NODE_TYPES[type]
    end

    def validator_name(validator)
      VALIDATOR_NAMES[validator.class]
    end

    def validator_slug(validator)
      validator.class.name.underscore.gsub("/", "_")
    end

    def match_errors(upload)
      doc = upload.content
      uuid = UUID.new
      error_map = {}
      error_id = 0
      error_attributes = []
      locs = upload.errors.collect{|e| e.location}
      locs.compact!

      locs.each do |location|
        # Get rid of some funky stuff generated by schematron
        clean_location = location.gsub("[namespace-uri()='urn:hl7-org:v3']", '')
        node = doc.at_xpath(clean_location)
        if(node)
          elem = node
          if node.class == Nokogiri::XML::Attr
            error_attributes << node
            elem = node.element
          end
          elem = elem.root if node_type(elem.type) == :document
          if elem

            unless elem['error_id']

              elem['error_id']= uuid.generate.to_s
            end
            error_map[location] = elem['error_id']
          end
        end
      end

      return error_map, error_attributes
    end


end
